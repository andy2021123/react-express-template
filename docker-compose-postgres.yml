services:
  app:
    build:
      context: .
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./data/app:/app/data
    environment: 
      NODE_ENV: production
      PG_HOST: database
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DATABASE: ${PG_DATABASE}
    depends_on:
      database:
        condition: service_healthy
        restart: true

  database:
    image: postgres:alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DATABASE}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      # - /path/to/dump.sql:/docker-entrypoint-initdb.d/dump.sql
